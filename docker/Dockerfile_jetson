######################################
###### Dockerfile for Cobra
######################################
FROM nvcr.io/nvidia/l4t-jetpack:r35.2.1
LABEL maintainer="gogojjh <jiaojh1994@gmail.com>"

############### Basic Ubuntu command
# TZData goes first.
RUN apt-get update
ARG DEBIAN_FRONTEND=noninteractive
ENV TZ=Asia/Shanghai
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
RUN apt-get -y install tzdata

RUN mkdir -p /usr/app
RUN apt-get update && apt-get install -y \
  libatlas-base-dev \
  libeigen3-dev \
  libgoogle-glog-dev \
  libsuitesparse-dev \
  libtool \
  libgoogle-glog-dev \
  libgtest-dev \
  curl \
  libsqlite3-dev \
  ssh \
  git \
  jq \
  gnupg \
  apt-utils \
  software-properties-common \
  build-essential \
  nfs-common \
  locate \
  vim \
  git \
  gdb
RUN apt install -y \
  cmake 

############### Jetson configuration
RUN wget -qO - https://apt.kitware.com/keys/kitware-archive-latest.asc | sudo apt-key add -
RUN apt-add-repository 'deb https://apt.kitware.com/ubuntu/ focal main'
RUN apt-get update
RUN apt-get install cmake python3-pip -y
RUN export OPENBLAS_CORETYPE=ARMV8

# Install ROS-Noetic
RUN sh -c '. /etc/lsb-release && echo "deb http://mirrors.ustc.edu.cn/ros/ubuntu/ `lsb_release -cs` main" > /etc/apt/sources.list.d/ros-latest.list'
RUN curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add -
RUN apt update && apt install -y ros-noetic-ros-base
RUN bash /opt/ros/noetic/setup.bash
RUN apt install -y \
  python3-rosdep \
  python3-rosinstall \
  python3-rosinstall-generator \
  python3-wstool \
  build-essential \
  python3-rosdep \
  python3-pip \
  python3-setuptools
RUN rosdep init 
RUN rosdep update
ENV ROS_DISTRO=noetic

# Install catkin_build
RUN apt-get install -y wget 
RUN wget http://packages.ros.org/ros.key -O - |  apt-key add - 
RUN apt-get -y install python3-catkin-tools

############### Nvblox (Mapping)
# Upgrade cmake to 3.23.2
# We need this to build with c++17 under CMAKE.
# NOTE: The commands below are taken from isaac_ros_common/docker/Dockerfile.aarch64
RUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | sudo tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null \
  && echo 'deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ focal main' | sudo tee /etc/apt/sources.list.d/kitware.list >/dev/null \
  && apt-get update \
  && rm /usr/share/keyrings/kitware-archive-keyring.gpg \
  && apt-get install -y kitware-archive-keyring \
  && apt-get remove -y cmake && apt-get purge -y cmake && apt-get remove -y cmake-data && apt-get purge -y cmake \
  && apt-get install -y cmake=3.23.2-0kitware1ubuntu20.04.1 cmake-data=3.23.2-0kitware1ubuntu20.04.1 \
  && cmake --version \
  && rm -rf /var/lib/apt/lists/* \
  && apt-get clean

# Install gtest
RUN cd /usr/app && git clone https://github.com/google/googletest
RUN cd /usr/app/googletest && cmake . && cmake --build . --target install
ENV DEBIAN_FRONTEND teletype

# ############### R3LIVE (SLAM)
RUN apt-get update && apt-get install -y \
  ros-${ROS_DISTRO}-pcl-ros \
  ros-${ROS_DISTRO}-tf-conversions \
  ros-${ROS_DISTRO}-eigen-conversions \
  ros-${ROS_DISTRO}-image-geometry \
  ros-${ROS_DISTRO}-camera-info-manager \
  ros-${ROS_DISTRO}-image-view \
  ros-${ROS_DISTRO}-cv-bridge \
  ros-${ROS_DISTRO}-tf \
  ros-${ROS_DISTRO}-tf2 \
  ros-${ROS_DISTRO}-tf2-eigen \
  ros-${ROS_DISTRO}-tf2-ros \
  ros-${ROS_DISTRO}-message-filters \
  ros-${ROS_DISTRO}-image-transport \
  ros-${ROS_DISTRO}-image-transport* 

# Install Python apt dependencies
RUN apt-get install --no-install-recommends -y \
  python3 \
  python3-numpy \
  python3-pip \
  python3-vcstool \
  && rm -rf /var/lib/apt/lists/*

# Install Python pip dependencies
RUN pip3 install --upgrade pip
RUN pip3 install --upgrade \
  numpy \
  pytest \
  setuptools \
  twine \
  opencv-python

# Install R3LIVE-related packages
RUN git clone https://github.com/Livox-SDK/Livox-SDK.git \
  && cd Livox-SDK && cd build && cmake .. && make -j4 && make install\
  && rm -r ../../Livox-SDK

RUN apt update
RUN apt-get install -y libcgal-dev pcl-tools
RUN apt-get install -y libopencv-dev python3-opencv

RUN mv /usr/include/flann/ext/lz4.h /usr/include/flann/ext/lz4.h.bck
RUN mv /usr/include/flann/ext/lz4hc.h /usr/include/flann/ext/lz4hc.h.bck
RUN ln -s /usr/include/lz4.h /usr/include/flann/ext/lz4.h
RUN ln -s /usr/include/lz4hc.h /usr/include/flann/ext/lz4hc.h

############## Segnet (Segmentation)
ENV DEBIAN_FRONTEND noninteractive
RUN apt update && apt install -y --no-install-recommends \
  git curl wget zsh tmux vim g++

RUN apt-get install -y \
  ros-${ROS_DISTRO}-ros-numpy \
  ros-${ROS_DISTRO}-vision-msgs

RUN mkdir /usr/app/segnet_requirements
COPY segnet/requirements.txt /usr/app/segnet/requirements.txt
RUN pip3 install -r /usr/app/segnet/requirements.txt

############## Cobra-Planner
RUN pip3 install open3d --ignore-installed PyYAML
RUN pip3 install --upgrade numexpr
RUN pip3 install -U g2o-python

############## Tools
RUN pip3 install pandas

############## Open3D (GUI)
RUN apt-get install libgl1-mesa-glx libc++1 libc++1-10 libc++abi1-10 libglfw3 libpng16-16
RUN wget https://github.com/isl-org/Open3D/releases/download/v0.13.0/open3d-app-0.13.0-Ubuntu_20.04.deb
RUN dpkg -i open3d-app-0.13.0-Ubuntu_20.04.deb

